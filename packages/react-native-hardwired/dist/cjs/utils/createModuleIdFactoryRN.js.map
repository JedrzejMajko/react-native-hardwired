{"version":3,"file":"createModuleIdFactoryRN.js","names":["_utils","require","createModuleIdFactory","packPath","hashingAlgorithm","exports","_default","createModuleIdFactoryRN"],"sources":["../../../src/utils/createModuleIdFactoryRN.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { hashingAlgorithm } from \"../utils\";\n\n/**\n * Creates a module ID based on its name.\n * It should be always unique.\n * Please note that RN returns strings on __DEV__ mode and numbers on prod.\n * Here, we return only numbers on both dev and prod.\n * This method is intended to be used in metro.config.js ES6 environment.\n * In your metro.config.js, you can use it like this:\n *   serializer: {\n *     createModuleIdFactory: createModuleIdFactory,\n *   },\n * @param packPath\n * @returns {function(string): number}\n */\nexport const createModuleIdFactory =\n  () =>\n  (packPath: string): number => {\n    return hashingAlgorithm(packPath);\n  };\nexport default {\n  createModuleIdFactoryRN: createModuleIdFactory,\n};\n"],"mappings":";;;;;;AAqBA,IAAAA,MAAA,GAAAC,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,qBAAqB,GAChC,SADWA,qBAAqBA,CAAA;EAAA,OAEhC,UAACC,QAAgB,EAAa;IAC5B,OAAO,IAAAC,uBAAgB,EAACD,QAAQ,CAAC;EACnC,CAAC;AAAA;AAACE,OAAA,CAAAH,qBAAA,GAAAA,qBAAA;AAAA,IAAAI,QAAA,GACW;EACbC,uBAAuB,EAAEL;AAC3B,CAAC;AAAAG,OAAA,cAAAC,QAAA"}