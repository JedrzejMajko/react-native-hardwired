{"version":3,"file":"requireModule.js","names":["_utils","require","requireModule","config","name","loadedModuleHash","getHash","hash","hashingAlgorithm","registerHash","exports","_default"],"sources":["../../../src/utils/requireModule.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { hashingAlgorithm, registerHash, getHash } from \"../utils\";\nimport { Config } from \"../types\";\n\n/**\n * Generates hash for the module and registers it in the context\n * @param name module's name\n */\nexport const requireModule = (\n  config: Config,\n  name: string | null\n): number | null => {\n  if (name === null) {\n    return null;\n  }\n\n  let loadedModuleHash: number | null = getHash(config, name);\n\n  if (loadedModuleHash === null) {\n    const hash = hashingAlgorithm(name);\n    registerHash(config, name, hash);\n    loadedModuleHash = hash;\n  }\n\n  return loadedModuleHash;\n};\n\nexport default { requireModule };\n"],"mappings":";;;;;;AAqBA,IAAAA,MAAA,GAAAC,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CACxBC,MAAc,EACdC,IAAmB,EACD;EAClB,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,IAAIC,gBAA+B,GAAG,IAAAC,cAAO,EAACH,MAAM,EAAEC,IAAI,CAAC;EAE3D,IAAIC,gBAAgB,KAAK,IAAI,EAAE;IAC7B,IAAME,IAAI,GAAG,IAAAC,uBAAgB,EAACJ,IAAI,CAAC;IACnC,IAAAK,mBAAY,EAACN,MAAM,EAAEC,IAAI,EAAEG,IAAI,CAAC;IAChCF,gBAAgB,GAAGE,IAAI;EACzB;EAEA,OAAOF,gBAAgB;AACzB,CAAC;AAACK,OAAA,CAAAR,aAAA,GAAAA,aAAA;AAAA,IAAAS,QAAA,GAEa;EAAET,aAAa,EAAbA;AAAc,CAAC;AAAAQ,OAAA,cAAAC,QAAA"}