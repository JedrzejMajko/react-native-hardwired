{"version":3,"file":"index.d.js","names":[],"sources":["../../../src/types/index.d.ts"],"sourcesContent":["import { ReactNode } from \"react\";\n\nexport {};\n\ndeclare global {\n  var __DEV__: bool;\n  var __r: CallableFunction;\n  var ErrorUtils: any; // @TEMP\n}\n\ntype HashingMethod = (path: string) => number;\n\ninterface LoadedModulesType {\n  [key: string]: number;\n}\n\nexport interface ModuleType {\n  default: Function;\n}\n\nexport interface Dependency {\n  hashes: number[]; // list of hashes to use in order of preference\n  names?: string[]; // list of names for hashes (optional)\n}\n\nexport interface Config {\n  //root: string?;\n  //ctx: React.Context<HardwiredContextType>;\n  runModuleStatement: CallableFunction;\n  defineModuleName: String;\n  internalNaming: Generator<string>;\n  loadedModules: LoadedModulesType;\n}\n\nexport interface UserConfig extends Config {\n  //ctx?: React.Context<HardwiredContextType>;\n  runModuleStatement?: CallableFunction;\n  defineModuleName?: String;\n  internalNaming?: Generator<string>;\n  loadedModules?: LoadedModulesType;\n}\n\nexport interface HardwiredDependency {\n  hashes: number[];\n  names: string[];\n}\n\nexport interface HardwiredSourceObject {\n  code: string;\n  dependencies?: HardwiredDependency[];\n}\n\nexport interface HardwiredLoadType {\n  children?: ReactNode;\n  name?: string;\n  source: Function | string | object;\n  args: any; // @FIXME change to definition of arguments\n}\n\nexport interface HardwiredContextType {\n  allowedRequirements?: string[];\n  loadedModules: LoadedModulesType;\n}\n\nexport interface HardwiredRequireType {\n  children?: ReactNode;\n  name: string | null;\n  hash: number | null;\n  args?: any; // it can be any type that will be passed to the props\n}\n\nexport interface HardwiredProviderType {\n  children?: ReactNode;\n  config?: Config;\n  allowedRequirements?: string[];\n}\n"],"mappings":""}