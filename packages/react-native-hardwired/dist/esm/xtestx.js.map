{"version":3,"file":"xtestx.js","names":["createModuleIdFactory","reportError","xtestx","config","runModuleStatement","moduleIdFactory","isNaN"],"sources":["../../src/xtestx.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { createModuleIdFactory } from \"./utils/createModuleIdFactoryRN\";\n\nimport { Config } from \"./types\";\nimport { reportError } from \"./errors\";\n\nexport const xtestx = (config: Config): boolean => {\n  if (\n    !config.runModuleStatement ||\n    typeof config.runModuleStatement !== \"function\"\n  ) {\n    reportError(\n      \"No required module method found. Setup it in config under the key: runModuleStatement\"\n    );\n    return false;\n  }\n\n  const moduleIdFactory = createModuleIdFactory()(\"react-native\");\n\n  if (isNaN(moduleIdFactory) || moduleIdFactory === 0) {\n    reportError(\n      \"Cannot generate module id. createModuleIdFactory method is unavailable.\"\n    );\n    return false;\n  }\n  /*\n  add context swap\n  const rnDefaultRequire = global[config.runModuleStatement](1);\n  if (rnDefaultRequire !== null) {\n    reportError(\n      \"Looks like you're using react-native default require. Please use hardwired require instead. Add to your metro.config.js:\\n\" +\n        \"import section:\\nimport {createModuleIdFactory} from 'coobers/rn-hardwired/dist/utils/createModuleIdFactoryNode';\\n\\n\" +\n        'into default export a key:\\nserializer:\\n{\\n' +\n        '  createModuleIdFactory: createModuleIdFactory\\n' +\n        '}' +\n        '\\n\\nThen, restart your metro server react-native start',\n    );\n    return false;\n  }*/\n\n  return true;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,iCAAiC;AAGvE,SAASC,WAAW,QAAQ,UAAU;AAEtC,OAAO,MAAMC,MAAM,GAAIC,MAAc,IAAc;EACjD,IACE,CAACA,MAAM,CAACC,kBAAkB,IAC1B,OAAOD,MAAM,CAACC,kBAAkB,KAAK,UAAU,EAC/C;IACAH,WAAW,CACT,uFACF,CAAC;IACD,OAAO,KAAK;EACd;EAEA,MAAMI,eAAe,GAAGL,qBAAqB,CAAC,CAAC,CAAC,cAAc,CAAC;EAE/D,IAAIM,KAAK,CAACD,eAAe,CAAC,IAAIA,eAAe,KAAK,CAAC,EAAE;IACnDJ,WAAW,CACT,yEACF,CAAC;IACD,OAAO,KAAK;EACd;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAO,IAAI;AACb,CAAC"}