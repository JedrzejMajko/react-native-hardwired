{"version":3,"file":"config.js","names":["React","xtestx","isDevelopment","process","env","NODE_ENV","internalNaming","i","getDefaultConfig","runModuleStatement","__r","defineModuleName","loadedModules","context","createConfig","userConfig","defaultConfig","config","getContext","createContext"],"sources":["../../src/config.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { Config, UserConfig } from \"./types/index\";\nimport React, { Context } from \"react\";\nimport { xtestx } from \"./xtestx\";\n\n/**\n * Statement for throwing errors in config\n */\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\n/**\n * Allows to use custom names for modules without names.\n */\nconst internalNaming = function* (): Generator<string> {\n  let i = 0;\n  while (true) {\n    yield \"h\" + i++;\n  }\n};\n\n/**\n * Default config.\n */\nexport const getDefaultConfig = (): Config => {\n  return {\n    runModuleStatement: __r,\n    defineModuleName: \"__d\", // @FIXME use global[`${__METRO_GLOBAL_PREFIX__}__d`] = define;\n    loadedModules: {},\n    internalNaming: internalNaming(),\n  };\n};\n\n/**\n * Context for hardwired.\n */\nlet context;\n\n/**\n * Create a new configuration for provider.\n * Used by provider.\n * @param userConfig\n */\nexport const createConfig = (userConfig?: UserConfig | undefined): Config => {\n  const defaultConfig = getDefaultConfig();\n\n  const config: Config =\n    typeof userConfig === \"undefined\"\n      ? defaultConfig\n      : { ...defaultConfig, ...userConfig };\n\n  if (isDevelopment) {\n    xtestx(config);\n  }\n\n  return config;\n};\n\n/**\n * Returns the current config object.\n */\nexport const getContext = (): Context<Config> => {\n  if (!context) {\n    context = React.createContext<Config>(getDefaultConfig());\n  }\n  return context;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAmB,OAAO;AACtC,SAASC,MAAM,QAAQ,UAAU;;AAEjC;AACA;AACA;AACA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;;AAE5D;AACA;AACA;AACA,MAAMC,cAAc,GAAG,UAAAA,CAAA,EAAgC;EACrD,IAAIC,CAAC,GAAG,CAAC;EACT,OAAO,IAAI,EAAE;IACX,MAAM,GAAG,GAAGA,CAAC,EAAE;EACjB;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAc;EAC5C,OAAO;IACLC,kBAAkB,EAAEC,GAAG;IACvBC,gBAAgB,EAAE,KAAK;IAAE;IACzBC,aAAa,EAAE,CAAC,CAAC;IACjBN,cAAc,EAAEA,cAAc,CAAC;EACjC,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,IAAIO,OAAO;;AAEX;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAIC,UAAmC,IAAa;EAC3E,MAAMC,aAAa,GAAGR,gBAAgB,CAAC,CAAC;EAExC,MAAMS,MAAc,GAClB,OAAOF,UAAU,KAAK,WAAW,GAC7BC,aAAa,GACb;IAAE,GAAGA,aAAa;IAAE,GAAGD;EAAW,CAAC;EAEzC,IAAIb,aAAa,EAAE;IACjBD,MAAM,CAACgB,MAAM,CAAC;EAChB;EAEA,OAAOA,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAuB;EAC/C,IAAI,CAACL,OAAO,EAAE;IACZA,OAAO,gBAAGb,KAAK,CAACmB,aAAa,CAASX,gBAAgB,CAAC,CAAC,CAAC;EAC3D;EACA,OAAOK,OAAO;AAChB,CAAC"}