{"version":3,"file":"loadDependencies.js","names":["errorUtilsContextSwap","reportError","loadDependencies","dependencies","config","dependencyIds","result","depCount","length","loadedHashCount","i","dependency","hashes","lib","e","hash","runModuleStatement","push","error"],"sources":["../../../src/utils/loadDependencies.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { Config, Dependency } from \"../types\";\nimport { errorUtilsContextSwap } from \"./errorUtilsContextSwap\";\nimport { reportError } from \"../errors\";\n\n/**\n * Loads dependencies, tries to load them and returns array of valid, loaded dependency hashes.\n * @param dependencies\n * @param config\n */\nexport const loadDependencies = async (\n  dependencies: Dependency[],\n  config: Config\n): Promise<number[]> => {\n  let dependencyIds: number[] = [];\n\n  let result = await errorUtilsContextSwap(() => {\n    let depCount = dependencies.length;\n    let loadedHashCount = 0;\n    for (let i = 0; i < depCount; i++) {\n      const dependency = dependencies[i];\n\n      if (dependency.hashes) {\n        let lib;\n        for (let e = 0; e < dependency.hashes.length; e++) {\n          const hash = dependency.hashes[e];\n\n          try {\n            lib = config.runModuleStatement(hash);\n\n            if (lib) {\n              loadedHashCount++;\n              dependencyIds.push(hash);\n              break;\n            }\n          } catch (error) {\n            reportError(\"Ignoring bad dependency hash \" + hash);\n          }\n        }\n      }\n    }\n\n    if (depCount !== loadedHashCount) {\n      reportError(\n        \"Not all dependencies loaded \" + depCount + \" from \" + loadedHashCount\n      );\n      return false;\n    }\n    return true;\n  });\n\n  /*if (!result) {\n    reportError(\"Cannot load dependencies\");\n  }*/\n\n  return result ? dependencyIds : [];\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,WAAW,QAAQ,WAAW;;AAEvC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAC9BC,YAA0B,EAC1BC,MAAc,KACQ;EACtB,IAAIC,aAAuB,GAAG,EAAE;EAEhC,IAAIC,MAAM,GAAG,MAAMN,qBAAqB,CAAC,MAAM;IAC7C,IAAIO,QAAQ,GAAGJ,YAAY,CAACK,MAAM;IAClC,IAAIC,eAAe,GAAG,CAAC;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MACjC,MAAMC,UAAU,GAAGR,YAAY,CAACO,CAAC,CAAC;MAElC,IAAIC,UAAU,CAACC,MAAM,EAAE;QACrB,IAAIC,GAAG;QACP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACC,MAAM,CAACJ,MAAM,EAAEM,CAAC,EAAE,EAAE;UACjD,MAAMC,IAAI,GAAGJ,UAAU,CAACC,MAAM,CAACE,CAAC,CAAC;UAEjC,IAAI;YACFD,GAAG,GAAGT,MAAM,CAACY,kBAAkB,CAACD,IAAI,CAAC;YAErC,IAAIF,GAAG,EAAE;cACPJ,eAAe,EAAE;cACjBJ,aAAa,CAACY,IAAI,CAACF,IAAI,CAAC;cACxB;YACF;UACF,CAAC,CAAC,OAAOG,KAAK,EAAE;YACdjB,WAAW,CAAC,+BAA+B,GAAGc,IAAI,CAAC;UACrD;QACF;MACF;IACF;IAEA,IAAIR,QAAQ,KAAKE,eAAe,EAAE;MAChCR,WAAW,CACT,8BAA8B,GAAGM,QAAQ,GAAG,QAAQ,GAAGE,eACzD,CAAC;MACD,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC,CAAC;;EAEF;AACF;AACA;;EAEE,OAAOH,MAAM,GAAGD,aAAa,GAAG,EAAE;AACpC,CAAC"}