{"version":3,"file":"finalize.js","names":["fs","require","dependencies","transformCode","code","substring","length","module","exports","transpiled","cliOptions","entryFile","deps","dependencyList","output","data","finalForm","JSON","stringify","parse","outputFile","writeFileSync"],"sources":["../../../src/utils/finalize.js"],"sourcesContent":["/*\n * Hardwired Copyright (c) 2023 JÄ™drzej Majko (jdrzjm@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nconst fs = require('fs');\nconst dependencies = require('./dependencies');\n\nconst transformCode = (code) => {\n  return code.substring('__d('.length, code.length - 2);\n};\n\n/**\n * Transform transpiled metro code into a stringified, hardwired json\n * @param transpiled\n * @param cliOptions\n * @param entryFile\n * @param deps\n * @returns {Promise<string|void>}\n */\nmodule.exports = async (transpiled, cliOptions, entryFile, deps) => {\n  const dependencyList = dependencies(\n    transpiled.dependencies,\n    entryFile,\n    deps,\n    cliOptions\n  );\n\n  let code = transformCode(transpiled.output[0].data.code);\n\n  const finalForm = JSON.stringify(\n    JSON.parse(\n      JSON.stringify({\n        code: code,\n        dependencies: dependencyList,\n      })\n    )\n  );\n\n  if (cliOptions.outputFile) {\n    return fs.writeFileSync(cliOptions.outputFile, finalForm);\n  }\n\n  return finalForm;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE9C,MAAME,aAAa,GAAIC,IAAI,IAAK;EAC9B,OAAOA,IAAI,CAACC,SAAS,CAAC,MAAM,CAACC,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;AACvD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,OAAOC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,IAAI,KAAK;EAClE,MAAMC,cAAc,GAAGX,YAAY,CACjCO,UAAU,CAACP,YAAY,EACvBS,SAAS,EACTC,IAAI,EACJF,UACF,CAAC;EAED,IAAIN,IAAI,GAAGD,aAAa,CAACM,UAAU,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAACX,IAAI,CAAC;EAExD,MAAMY,SAAS,GAAGC,IAAI,CAACC,SAAS,CAC9BD,IAAI,CAACE,KAAK,CACRF,IAAI,CAACC,SAAS,CAAC;IACbd,IAAI,EAAEA,IAAI;IACVF,YAAY,EAAEW;EAChB,CAAC,CACH,CACF,CAAC;EAED,IAAIH,UAAU,CAACU,UAAU,EAAE;IACzB,OAAOpB,EAAE,CAACqB,aAAa,CAACX,UAAU,CAACU,UAAU,EAAEJ,SAAS,CAAC;EAC3D;EAEA,OAAOA,SAAS;AAClB,CAAC"}